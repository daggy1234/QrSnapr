name: Build Universal macOS App (No Developer Account Required)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  # Allow manual triggering
  workflow_dispatch:

jobs:
  build:
    name: Build App for ${{ matrix.arch }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            runs_on: macos-13 # Intel runner (adjust if needed)
            artifact_name: QrSnapr-x86_64
          - arch: arm64
            runs_on: macos-14 # Apple Silicon runner
            artifact_name: QrSnapr-arm64
    runs-on: ${{ matrix.runs_on }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "latest"

      - name: Set up Node.js and create-dmg
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install create-dmg
        run: npm install --global create-dmg

      - name: Build App for ${{ matrix.arch }}
        run: |
          # Create a temporary xcconfig file to override code signing settings
          cat > build.xcconfig << EOF
          CODE_SIGN_IDENTITY = -
          CODE_SIGN_IDENTITY[sdk=macosx*] = -
          CODE_SIGNING_REQUIRED = NO
          CODE_SIGNING_ALLOWED = NO
          DEVELOPMENT_TEAM =
          DEVELOPMENT_TEAM[sdk=macosx*] =
          CODE_SIGN_STYLE = Automatic
          PROVISIONING_PROFILE_SPECIFIER =
          EOF

          # Remove corrupted SwiftPM Package.resolved to avoid malformed file error
          rm -f QrSnapr.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved

          # Use a dedicated derived data path so the build products are predictable
          xcodebuild clean build \
            -scheme QrSnapr \
            -project QrSnapr.xcodeproj \
            -configuration Release \
            -derivedDataPath build \
            -xcconfig build.xcconfig \
            ARCHS="${{ matrix.arch }}" \
            ONLY_ACTIVE_ARCH=NO

      - name: Create DMG for ${{ matrix.arch }}
        continue-on-error: true
        run: |
          APP_PATH=build/Build/Products/Release/QrSnapr.app
          # Skip codesign since no identity is available
          create-dmg \
            --overwrite \
            --identity="" \
            --dmg-title "${{ matrix.artifact_name }}" \
            "$APP_PATH" \
            "build/Build/Products/Release/"
      - name: check if dmg exists
        run: |
          cd build/Build/Products/Release
          ls -l
        shell: bash

      - name: Upload DMG Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: build/Build/Products/Release/${{ matrix.artifact_name }}.dmg
